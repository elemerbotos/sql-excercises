package com.epam.training.jp.jdbc.excercises.dao.jdbctemplateimpl;

import java.util.List;

import javax.sql.DataSource;

import org.springframework.jdbc.core.support.JdbcDaoSupport;

import com.epam.training.jp.jdbc.excercises.dao.FoodDao;
import com.epam.training.jp.jdbc.excercises.domain.Food;

public class JdbcTemplateFoodDao extends JdbcDaoSupport implements FoodDao {

	public JdbcTemplateFoodDao(DataSource dataSource) {
		setDataSource(dataSource);
	}

	@Override
	public Food findFoodByName(String name) {
		String sql = "SELECT ID, CALORIES, ISVEGAN, NAME, PRICE from FOOD WHERE NAME = ? ";
		return this.getJdbcTemplate().queryForObject(sql, new Object[] {name}, Food.class);
	}

	@Override
	public void updateFoodPriceByName(String name, int newPrice) {
		String sql = "UPDATE food SET PRICE = ? WHERE NAME = ?";
		this.getJdbcTemplate().update(sql, new Object[] {newPrice, name});
	}

	@Override
	public void save(List<Food> foods) {
		String sql = "INSERT INTO food (CALORIES, ISVEGAN, NAME, PRICE) VALUES (?, ?, ?, ?)";
		for(Food food : foods) {
			this.getJdbcTemplate().update(sql, new Object[] {
					food.getCalories(), food.isVegan(), food.getName(), food.getPrice()});
		}
	}

	
}
